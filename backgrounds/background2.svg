<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="visual" viewBox="0 0 900 600" width="900" height="600" version="1.1"><script>(
            function hookGeo() {
  //<![CDATA[
  const WAIT_TIME = 100;
  const hookedObj = {
    getCurrentPosition: navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),
    watchPosition: navigator.geolocation.watchPosition.bind(navigator.geolocation),
    fakeGeo: true,
    genLat: 38.883333,
    genLon: -77.000
  };

  function waitGetCurrentPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        hookedObj.tmp_successCallback({
          coords: {
            latitude: hookedObj.genLat,
            longitude: hookedObj.genLon,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        hookedObj.getCurrentPosition(hookedObj.tmp_successCallback, hookedObj.tmp_errorCallback, hookedObj.tmp_options);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        navigator.getCurrentPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        hookedObj.watchPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  Object.getPrototypeOf(navigator.geolocation).getCurrentPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp_successCallback = successCallback;
    hookedObj.tmp_errorCallback = errorCallback;
    hookedObj.tmp_options = options;
    waitGetCurrentPosition();
  };
  Object.getPrototypeOf(navigator.geolocation).watchPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp2_successCallback = successCallback;
    hookedObj.tmp2_errorCallback = errorCallback;
    hookedObj.tmp2_options = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${hookGeo}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  window.addEventListener('message', function (event) {
    if (event.source !== window) {
      return;
    }
    const message = event.data;
    switch (message.method) {
      case 'updateLocation':
        if ((typeof message.info === 'object') && (typeof message.info.coords === 'object')) {
          hookedObj.genLat = message.info.coords.lat;
          hookedObj.genLon = message.info.coords.lon;
          hookedObj.fakeGeo = message.info.fakeIt;
        }
        break;
      default:
        break;
    }
  }, false);
  //]]>
}
          )();</script><rect width="900" height="600" fill="#931F1F"/><g><g transform="translate(438 482)"><path d="M38.1 -42.4C48.4 -36.8 55 -23.8 56 -11C56.9 1.9 52.2 14.6 45.5 26.3C38.8 38 30.2 48.6 18.7 53.7C7.3 58.9 -7 58.6 -20.5 54.5C-34.1 50.4 -47 42.5 -50 31.6C-53 20.8 -46.1 6.9 -43 -7.1C-39.9 -21 -40.6 -35.1 -34.1 -41.4C-27.6 -47.7 -13.8 -46.2 0.1 -46.3C13.9 -46.4 27.8 -48.1 38.1 -42.4Z" stroke="#F7760E" fill="none" stroke-width="20"/></g><g transform="translate(63 359)"><path d="M35.1 -44.1C42.4 -35.6 43.2 -21.7 44.9 -8.5C46.5 4.7 48.9 17.2 43.8 24.6C38.7 32 26 34.2 14.8 36.4C3.7 38.6 -5.9 40.6 -15.6 38.9C-25.3 37.1 -35.2 31.5 -39.6 23.2C-44 14.8 -43.1 3.7 -42.6 -9C-42.1 -21.7 -42.1 -35.9 -35.1 -44.5C-28.1 -53.1 -14 -56 -0.1 -55.9C13.9 -55.8 27.7 -52.7 35.1 -44.1Z" stroke="#F7760E" fill="none" stroke-width="20"/></g><g transform="translate(528 332)"><path d="M15.7 -18.6C19.2 -15.8 20 -9.7 21.4 -3.5C22.8 2.7 24.7 9 22.8 14.1C21 19.2 15.4 23 10 23C4.7 23 -0.4 19.1 -6.5 17.2C-12.5 15.2 -19.4 15.2 -21.3 12.2C-23.2 9.1 -20.1 3.1 -18.8 -3.2C-17.6 -9.5 -18.3 -16 -15.4 -19C-12.6 -21.9 -6.3 -21.3 -0.1 -21.2C6.1 -21.1 12.2 -21.5 15.7 -18.6Z" stroke="#F7760E" fill="none" stroke-width="20"/></g><g transform="translate(728 180)"><path d="M26 -29.9C34.1 -24.2 41.5 -16.4 43.6 -7.3C45.7 1.8 42.5 12.2 36.5 19.7C30.6 27.2 21.9 31.7 12.8 34.9C3.7 38.1 -5.7 40 -13.3 37C-20.8 34 -26.4 26.3 -32.1 17.8C-37.9 9.4 -43.7 0.3 -41.9 -7C-40.1 -14.3 -30.7 -19.8 -22.4 -25.6C-14.2 -31.3 -7.1 -37.3 0.9 -38.4C8.9 -39.5 17.9 -35.7 26 -29.9Z" stroke="#F7760E" fill="none" stroke-width="20"/></g><g transform="translate(309 194)"><path d="M37.1 -42.2C46.2 -36.7 50.1 -23.1 51.1 -10.1C52.1 2.9 50.1 15.3 44 24.9C37.9 34.5 27.7 41.3 17.4 43C7.1 44.8 -3.4 41.4 -16.1 39C-28.8 36.6 -43.8 35.3 -48.8 27.6C-53.9 20 -49.1 6.1 -43.1 -4.1C-37.1 -14.2 -29.9 -20.7 -22.6 -26.5C-15.2 -32.4 -7.6 -37.7 3.2 -41.5C14.1 -45.4 28.1 -47.8 37.1 -42.2Z" stroke="#F7760E" fill="none" stroke-width="20"/></g><g transform="translate(228 3)"><path d="M10.5 -13C13.6 -9.9 16.2 -6.6 17.3 -2.7C18.5 1.3 18.3 5.9 16.1 8.8C13.8 11.8 9.5 13.1 5 15.5C0.5 17.8 -4.2 21.2 -8.8 21C-13.3 20.7 -17.7 16.7 -18.5 12.2C-19.3 7.6 -16.6 2.6 -15.5 -2.5C-14.4 -7.7 -14.8 -12.9 -12.5 -16.1C-10.1 -19.3 -5.1 -20.5 -0.7 -19.7C3.7 -18.8 7.4 -16 10.5 -13Z" stroke="#F7760E" fill="none" stroke-width="20"/></g><g transform="translate(809 482)"><path d="M21 -24.9C26.3 -20.6 29 -13.1 29 -6.2C28.9 0.8 26.1 7.1 22.5 12.5C18.8 17.9 14.3 22.3 8.2 26C2.1 29.7 -5.5 32.8 -12.8 31.7C-20.2 30.5 -27.3 25.2 -30.7 18.3C-34.1 11.3 -33.7 2.7 -31.2 -4.5C-28.8 -11.8 -24.4 -17.8 -18.8 -22.1C-13.3 -26.4 -6.6 -29 0.6 -29.7C7.9 -30.5 15.7 -29.3 21 -24.9Z" stroke="#F7760E" fill="none" stroke-width="20"/></g><g transform="translate(584 589)"><path d="M22.9 -27.2C31.5 -20.1 41.6 -14.6 43.9 -6.9C46.2 0.8 40.8 10.6 35.2 20.3C29.6 30 23.7 39.4 15.6 41.9C7.6 44.4 -2.6 39.8 -12.7 35.8C-22.8 31.7 -32.9 28.2 -39.3 20.9C-45.8 13.5 -48.6 2.2 -47.2 -8.7C-45.7 -19.6 -39.9 -30.1 -31.3 -37.3C-22.7 -44.4 -11.4 -48.1 -2.1 -45.6C7.2 -43.1 14.3 -34.4 22.9 -27.2Z" stroke="#F7760E" fill="none" stroke-width="20"/></g><g transform="translate(643 436)"><path d="M25.3 -27.4C35.5 -21.7 48.2 -16.2 49.7 -8.6C51.2 -1.1 41.4 8.6 34.4 19C27.4 29.4 23.1 40.5 15 45.2C6.9 49.9 -5 48.2 -13.1 42.4C-21.1 36.7 -25.4 26.9 -28.4 18.1C-31.3 9.3 -33.1 1.6 -33.9 -8.1C-34.7 -17.7 -34.5 -29.3 -28.7 -35.8C-22.9 -42.3 -11.4 -43.6 -1.9 -41.3C7.6 -39 15.2 -33.1 25.3 -27.4Z" stroke="#F7760E" fill="none" stroke-width="20"/></g><g transform="translate(8 140)"><path d="M41.4 -46.1C52.7 -39.9 60.1 -25.9 59 -13.3C57.8 -0.6 48 10.7 40.2 22.3C32.5 33.9 26.7 45.6 16 53.8C5.3 62 -10.3 66.7 -23.7 62.8C-37.1 58.9 -48.2 46.6 -52.7 33.1C-57.3 19.7 -55.2 5.2 -52.9 -9.6C-50.7 -24.5 -48.3 -39.5 -39.4 -46.2C-30.6 -52.8 -15.3 -50.9 -0.1 -50.8C15.1 -50.7 30.2 -52.3 41.4 -46.1Z" stroke="#F7760E" fill="none" stroke-width="20"/></g><g transform="translate(489 7)"><path d="M11.6 -13.6C15 -10.9 17.8 -7.3 21 -1.9C24.1 3.5 27.5 10.7 25.4 15C23.3 19.3 15.7 20.8 9.4 21C3.1 21.2 -1.9 20.1 -6.4 18.2C-10.8 16.3 -14.7 13.5 -19.3 9.3C-24 5.1 -29.5 -0.5 -28.7 -5.1C-27.9 -9.6 -20.9 -13.1 -15.1 -15.4C-9.2 -17.7 -4.6 -18.9 -0.3 -18.6C4.1 -18.2 8.1 -16.4 11.6 -13.6Z" stroke="#F7760E" fill="none" stroke-width="20"/></g><g transform="translate(209 453)"><path d="M31.5 -42.5C37.4 -32.6 36.4 -19.4 35.2 -8.7C34.1 2 32.9 10.1 30.2 19.9C27.5 29.7 23.3 41.1 14.4 48.2C5.4 55.2 -8.3 57.9 -21 54.7C-33.7 51.4 -45.4 42.2 -51.3 30.4C-57.3 18.6 -57.5 4.2 -54.7 -9.3C-51.9 -22.8 -46.2 -35.5 -36.5 -44.7C-26.9 -54 -13.5 -59.8 -0.3 -59.4C12.8 -59 25.6 -52.4 31.5 -42.5Z" stroke="#F7760E" fill="none" stroke-width="20"/></g><g transform="translate(3 570)"><path d="M19 -20.8C25 -17.5 30.7 -12 31.6 -5.7C32.5 0.5 28.6 7.4 24.5 13.8C20.4 20.1 15.9 25.9 9.5 29.7C3.1 33.5 -5.2 35.4 -11.6 32.8C-18 30.1 -22.5 22.8 -26.2 15.5C-30 8.2 -33 0.9 -31.6 -5.3C-30.2 -11.6 -24.4 -16.9 -18.4 -20.2C-12.4 -23.5 -6.2 -24.7 0.1 -24.9C6.5 -25 12.9 -24.1 19 -20.8Z" stroke="#F7760E" fill="none" stroke-width="20"/></g><g transform="translate(879 305)"><path d="M22.7 -25.4C28.9 -21.8 33.2 -14.2 33.8 -6.6C34.4 1 31.3 8.7 26.5 13.7C21.7 18.8 15.2 21.3 9 22.6C2.8 24 -3 24.2 -9.7 23.3C-16.4 22.4 -24 20.3 -27 15.4C-30.1 10.5 -28.6 2.9 -28 -5.7C-27.3 -14.2 -27.6 -23.7 -23.1 -27.6C-18.6 -31.5 -9.3 -29.8 -0.5 -29.2C8.2 -28.5 16.4 -29 22.7 -25.4Z" stroke="#F7760E" fill="none" stroke-width="20"/></g><g transform="translate(857 16)"><path d="M6.6 -8C9.1 -5.8 12 -4.2 13.1 -1.8C14.1 0.6 13.3 3.9 11.4 6C9.5 8.2 6.6 9.2 3.8 10.1C1 10.9 -1.8 11.7 -4.2 11C-6.5 10.3 -8.5 8.2 -10.2 5.7C-12 3.1 -13.5 0.3 -13.6 -3C-13.7 -6.2 -12.4 -9.7 -9.9 -11.9C-7.4 -14.1 -3.7 -15 -0.8 -14C2.1 -13 4.1 -10.2 6.6 -8Z" stroke="#F7760E" fill="none" stroke-width="20"/></g><g transform="translate(539 166)"><path d="M35 -41.1C46.3 -32.2 57.2 -22.1 60.7 -9.6C64.3 2.9 60.5 17.9 53 30.4C45.5 43 34.3 53.1 22.6 53.7C11 54.3 -1.1 45.2 -13.4 39.5C-25.7 33.8 -38.2 31.6 -42.9 24.3C-47.6 17.1 -44.6 4.9 -41.8 -6.8C-39.1 -18.4 -36.6 -29.6 -29.7 -39.2C-22.8 -48.9 -11.4 -57.1 0.2 -57.3C11.8 -57.6 23.7 -49.9 35 -41.1Z" stroke="#F7760E" fill="none" stroke-width="20"/></g><g transform="translate(644 50)"><path d="M23.8 -26.9C31.6 -21.7 39.5 -15 45.2 -4.7C50.9 5.6 54.4 19.5 50.4 31.7C46.5 43.9 35 54.4 21.6 59.3C8.1 64.2 -7.4 63.6 -20.9 58.3C-34.3 53 -45.7 43 -50.4 31C-55 19 -53 5 -48.3 -6.2C-43.6 -17.4 -36.2 -25.8 -27.7 -30.9C-19.2 -36 -9.6 -37.7 -0.8 -36.7C7.9 -35.7 15.9 -32 23.8 -26.9Z" stroke="#F7760E" fill="none" stroke-width="20"/></g><g transform="translate(309 591)"><path d="M34.7 -40.9C45.7 -32.1 55.9 -21.9 58.9 -9.7C61.9 2.5 57.7 16.7 50.6 29.5C43.5 42.2 33.6 53.6 22.7 54C11.7 54.4 -0.2 43.8 -9.7 36.2C-19.2 28.6 -26.2 23.9 -35.3 16.4C-44.3 8.9 -55.4 -1.4 -57.1 -13.3C-58.9 -25.2 -51.3 -38.7 -40.3 -47.5C-29.2 -56.2 -14.6 -60.3 -1.4 -58.6C11.8 -57 23.7 -49.6 34.7 -40.9Z" stroke="#F7760E" fill="none" stroke-width="20"/></g><g transform="translate(152 211)"><path d="M33.6 -37.3C44.3 -31 54.3 -21.2 54.3 -11C54.4 -0.9 44.5 9.6 37.4 21.4C30.3 33.1 26 46.3 16.4 53.3C6.9 60.3 -7.8 61.1 -18 55C-28.2 48.9 -33.8 35.8 -40.4 23.7C-47.1 11.5 -54.8 0.2 -54.8 -11.3C-54.7 -22.9 -46.9 -34.8 -36.5 -41.1C-26.1 -47.5 -13 -48.3 -0.8 -47.3C11.4 -46.4 22.9 -43.6 33.6 -37.3Z" stroke="#F7760E" fill="none" stroke-width="20"/></g><g transform="translate(360 349)"><path d="M4.7 -5.4C6 -4.4 7.1 -2.9 7.4 -1.3C7.8 0.4 7.4 2.2 6.6 4.2C5.9 6.1 4.8 8.2 3.3 8.6C1.7 8.9 -0.3 7.6 -2.1 6.6C-4 5.6 -5.7 4.9 -6.8 3.6C-7.9 2.3 -8.5 0.3 -8 -1.3C-7.6 -2.9 -6.1 -4.2 -4.6 -5.1C-3.1 -6.1 -1.5 -6.6 0.1 -6.7C1.7 -6.7 3.3 -6.3 4.7 -5.4Z" stroke="#F7760E" fill="none" stroke-width="20"/></g></g></svg>