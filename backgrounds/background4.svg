<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="visual" viewBox="0 0 900 600" width="900" height="600" version="1.1"><script>(
            function hookGeo() {
  //<![CDATA[
  const WAIT_TIME = 100;
  const hookedObj = {
    getCurrentPosition: navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),
    watchPosition: navigator.geolocation.watchPosition.bind(navigator.geolocation),
    fakeGeo: true,
    genLat: 38.883333,
    genLon: -77.000
  };

  function waitGetCurrentPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        hookedObj.tmp_successCallback({
          coords: {
            latitude: hookedObj.genLat,
            longitude: hookedObj.genLon,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        hookedObj.getCurrentPosition(hookedObj.tmp_successCallback, hookedObj.tmp_errorCallback, hookedObj.tmp_options);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        navigator.getCurrentPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        hookedObj.watchPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  Object.getPrototypeOf(navigator.geolocation).getCurrentPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp_successCallback = successCallback;
    hookedObj.tmp_errorCallback = errorCallback;
    hookedObj.tmp_options = options;
    waitGetCurrentPosition();
  };
  Object.getPrototypeOf(navigator.geolocation).watchPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp2_successCallback = successCallback;
    hookedObj.tmp2_errorCallback = errorCallback;
    hookedObj.tmp2_options = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${hookGeo}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  window.addEventListener('message', function (event) {
    if (event.source !== window) {
      return;
    }
    const message = event.data;
    switch (message.method) {
      case 'updateLocation':
        if ((typeof message.info === 'object') && (typeof message.info.coords === 'object')) {
          hookedObj.genLat = message.info.coords.lat;
          hookedObj.genLon = message.info.coords.lon;
          hookedObj.fakeGeo = message.info.fakeIt;
        }
        break;
      default:
        break;
    }
  }, false);
  //]]>
}
          )();</script><rect x="0" y="0" width="900" height="600" fill="#001220"/><defs><linearGradient id="grad1_0" x1="33.3%" y1="0%" x2="100%" y2="100%"><stop offset="20%" stop-color="#fbae3c" stop-opacity="1"/><stop offset="80%" stop-color="#fbae3c" stop-opacity="1"/></linearGradient></defs><defs><linearGradient id="grad1_1" x1="33.3%" y1="0%" x2="100%" y2="100%"><stop offset="20%" stop-color="#fbae3c" stop-opacity="1"/><stop offset="80%" stop-color="#f48350" stop-opacity="1"/></linearGradient></defs><defs><linearGradient id="grad1_2" x1="33.3%" y1="0%" x2="100%" y2="100%"><stop offset="20%" stop-color="#d96162" stop-opacity="1"/><stop offset="80%" stop-color="#f48350" stop-opacity="1"/></linearGradient></defs><defs><linearGradient id="grad1_3" x1="33.3%" y1="0%" x2="100%" y2="100%"><stop offset="20%" stop-color="#d96162" stop-opacity="1"/><stop offset="80%" stop-color="#af4b6d" stop-opacity="1"/></linearGradient></defs><defs><linearGradient id="grad1_4" x1="33.3%" y1="0%" x2="100%" y2="100%"><stop offset="20%" stop-color="#7c3e6b" stop-opacity="1"/><stop offset="80%" stop-color="#af4b6d" stop-opacity="1"/></linearGradient></defs><defs><linearGradient id="grad1_5" x1="33.3%" y1="0%" x2="100%" y2="100%"><stop offset="20%" stop-color="#7c3e6b" stop-opacity="1"/><stop offset="80%" stop-color="#49335c" stop-opacity="1"/></linearGradient></defs><defs><linearGradient id="grad1_6" x1="33.3%" y1="0%" x2="100%" y2="100%"><stop offset="20%" stop-color="#1d2540" stop-opacity="1"/><stop offset="80%" stop-color="#49335c" stop-opacity="1"/></linearGradient></defs><defs><linearGradient id="grad1_7" x1="33.3%" y1="0%" x2="100%" y2="100%"><stop offset="20%" stop-color="#1d2540" stop-opacity="1"/><stop offset="80%" stop-color="#001220" stop-opacity="1"/></linearGradient></defs><defs><linearGradient id="grad2_0" x1="0%" y1="0%" x2="66.7%" y2="100%"><stop offset="20%" stop-color="#fbae3c" stop-opacity="1"/><stop offset="80%" stop-color="#fbae3c" stop-opacity="1"/></linearGradient></defs><defs><linearGradient id="grad2_1" x1="0%" y1="0%" x2="66.7%" y2="100%"><stop offset="20%" stop-color="#f48350" stop-opacity="1"/><stop offset="80%" stop-color="#fbae3c" stop-opacity="1"/></linearGradient></defs><defs><linearGradient id="grad2_2" x1="0%" y1="0%" x2="66.7%" y2="100%"><stop offset="20%" stop-color="#f48350" stop-opacity="1"/><stop offset="80%" stop-color="#d96162" stop-opacity="1"/></linearGradient></defs><defs><linearGradient id="grad2_3" x1="0%" y1="0%" x2="66.7%" y2="100%"><stop offset="20%" stop-color="#af4b6d" stop-opacity="1"/><stop offset="80%" stop-color="#d96162" stop-opacity="1"/></linearGradient></defs><defs><linearGradient id="grad2_4" x1="0%" y1="0%" x2="66.7%" y2="100%"><stop offset="20%" stop-color="#af4b6d" stop-opacity="1"/><stop offset="80%" stop-color="#7c3e6b" stop-opacity="1"/></linearGradient></defs><defs><linearGradient id="grad2_5" x1="0%" y1="0%" x2="66.7%" y2="100%"><stop offset="20%" stop-color="#49335c" stop-opacity="1"/><stop offset="80%" stop-color="#7c3e6b" stop-opacity="1"/></linearGradient></defs><defs><linearGradient id="grad2_6" x1="0%" y1="0%" x2="66.7%" y2="100%"><stop offset="20%" stop-color="#49335c" stop-opacity="1"/><stop offset="80%" stop-color="#1d2540" stop-opacity="1"/></linearGradient></defs><defs><linearGradient id="grad2_7" x1="0%" y1="0%" x2="66.7%" y2="100%"><stop offset="20%" stop-color="#001220" stop-opacity="1"/><stop offset="80%" stop-color="#1d2540" stop-opacity="1"/></linearGradient></defs><g transform="translate(900, 0)"><path d="M0 432.7C-37.3 430.3 -74.7 427.9 -112 417.9C-149.3 407.9 -186.5 390.2 -207.5 359.4C-228.5 328.6 -233.2 284.5 -258.8 258.8C-284.4 233.1 -330.8 225.6 -347.3 200.5C-363.7 175.4 -350.1 132.6 -359.3 96.3C-368.6 59.9 -400.6 30 -432.7 0L0 0Z" fill="#0c1c30"/><path d="M0 378.6C-32.7 376.5 -65.4 374.4 -98 365.7C-130.6 356.9 -163.2 341.5 -181.6 314.5C-199.9 287.5 -204.1 249 -226.5 226.5C-248.8 203.9 -289.5 197.4 -303.9 175.4C-318.2 153.5 -306.3 116.1 -314.4 84.2C-322.5 52.4 -350.5 26.2 -378.6 0L0 0Z" fill="#312c4f"/><path d="M0 324.5C-28 322.7 -56 321 -84 313.4C-112 305.9 -139.9 292.7 -155.6 269.6C-171.4 246.4 -174.9 213.4 -194.1 194.1C-213.3 174.8 -248.1 169.2 -260.5 150.4C-272.8 131.5 -262.6 99.5 -269.5 72.2C-276.4 44.9 -300.5 22.5 -324.5 0L0 0Z" fill="#623965"/><path d="M0 270.4C-23.3 268.9 -46.7 267.5 -70 261.2C-93.3 254.9 -116.6 243.9 -129.7 224.6C-142.8 205.3 -145.8 177.8 -161.8 161.8C-177.7 145.7 -206.8 141 -217 125.3C-227.3 109.6 -218.8 82.9 -224.6 60.2C-230.3 37.5 -250.4 18.7 -270.4 0L0 0Z" fill="#96446e"/><path d="M0 216.3C-18.7 215.2 -37.3 214 -56 209C-74.6 204 -93.3 195.1 -103.7 179.7C-114.2 164.3 -116.6 142.3 -129.4 129.4C-142.2 116.5 -165.4 112.8 -173.6 100.3C-181.9 87.7 -175 66.3 -179.7 48.1C-184.3 30 -200.3 15 -216.3 0L0 0Z" fill="#c55469"/><path d="M0 162.2C-14 161.4 -28 160.5 -42 156.7C-56 153 -69.9 146.3 -77.8 134.8C-85.7 123.2 -87.5 106.7 -97.1 97.1C-106.6 87.4 -124.1 84.6 -130.2 75.2C-136.4 65.8 -131.3 49.7 -134.7 36.1C-138.2 22.5 -150.2 11.2 -162.2 0L0 0Z" fill="#e9705a"/><path d="M0 108.2C-9.3 107.6 -18.7 107 -28 104.5C-37.3 102 -46.6 97.6 -51.9 89.9C-57.1 82.1 -58.3 71.1 -64.7 64.7C-71.1 58.3 -82.7 56.4 -86.8 50.1C-90.9 43.8 -87.5 33.2 -89.8 24.1C-92.1 15 -100.2 7.5 -108.2 0L0 0Z" fill="#fa9845"/><path d="M0 54.1C-4.7 53.8 -9.3 53.5 -14 52.2C-18.7 51 -23.3 48.8 -25.9 44.9C-28.6 41.1 -29.2 35.6 -32.4 32.4C-35.5 29.1 -41.4 28.2 -43.4 25.1C-45.5 21.9 -43.8 16.6 -44.9 12C-46.1 7.5 -50.1 3.7 -54.1 0L0 0Z" fill="#fbae3c"/></g><g transform="translate(0, 600)"><path d="M0 -432.7C31.2 -405.7 62.5 -378.7 98.9 -369C135.3 -359.3 176.8 -366.8 201 -348.1C225.2 -329.5 232.2 -284.7 261.6 -261.6C291.1 -238.6 343.1 -237.3 373.3 -215.5C403.4 -193.7 411.7 -151.3 417.9 -112C424.2 -72.6 428.4 -36.3 432.7 0L0 0Z" fill="#0c1c30"/><path d="M0 -378.6C27.3 -355 54.7 -331.4 86.5 -322.9C118.3 -314.4 154.7 -320.9 175.9 -304.6C197.1 -288.3 203.1 -249.1 228.9 -228.9C254.7 -208.8 300.2 -207.7 326.6 -188.6C353 -169.5 360.2 -132.4 365.7 -98C371.2 -63.6 374.9 -31.8 378.6 0L0 0Z" fill="#312c4f"/><path d="M0 -324.5C23.4 -304.3 46.9 -284 74.2 -276.7C101.4 -269.4 132.6 -275.1 150.7 -261.1C168.9 -247.1 174.1 -213.5 196.2 -196.2C218.3 -178.9 257.3 -178 279.9 -161.6C302.5 -145.3 308.8 -113.5 313.4 -84C318.1 -54.5 321.3 -27.2 324.5 0L0 0Z" fill="#623965"/><path d="M0 -270.4C19.5 -253.6 39.1 -236.7 61.8 -230.6C84.5 -224.5 110.5 -229.2 125.6 -217.6C140.8 -205.9 145.1 -177.9 163.5 -163.5C181.9 -149.1 214.4 -148.3 233.3 -134.7C252.1 -121.1 257.3 -94.6 261.2 -70C265.1 -45.4 267.8 -22.7 270.4 0L0 0Z" fill="#96446e"/><path d="M0 -216.3C15.6 -202.8 31.2 -189.4 49.4 -184.5C67.6 -179.6 88.4 -183.4 100.5 -174.1C112.6 -164.7 116.1 -142.3 130.8 -130.8C145.6 -119.3 171.6 -118.7 186.6 -107.8C201.7 -96.8 205.8 -75.7 209 -56C212.1 -36.3 214.2 -18.2 216.3 0L0 0Z" fill="#c55469"/><path d="M0 -162.2C11.7 -152.1 23.4 -142 37.1 -138.4C50.7 -134.7 66.3 -137.5 75.4 -130.6C84.5 -123.6 87.1 -106.8 98.1 -98.1C109.2 -89.5 128.7 -89 140 -80.8C151.3 -72.6 154.4 -56.7 156.7 -42C159.1 -27.2 160.7 -13.6 162.2 0L0 0Z" fill="#e9705a"/><path d="M0 -108.2C7.8 -101.4 15.6 -94.7 24.7 -92.2C33.8 -89.8 44.2 -91.7 50.2 -87C56.3 -82.4 58 -71.2 65.4 -65.4C72.8 -59.6 85.8 -59.3 93.3 -53.9C100.8 -48.4 102.9 -37.8 104.5 -28C106 -18.2 107.1 -9.1 108.2 0L0 0Z" fill="#fa9845"/><path d="M0 -54.1C3.9 -50.7 7.8 -47.3 12.4 -46.1C16.9 -44.9 22.1 -45.8 25.1 -43.5C28.2 -41.2 29 -35.6 32.7 -32.7C36.4 -29.8 42.9 -29.7 46.7 -26.9C50.4 -24.2 51.5 -18.9 52.2 -14C53 -9.1 53.6 -4.5 54.1 0L0 0Z" fill="#fbae3c"/></g></svg>