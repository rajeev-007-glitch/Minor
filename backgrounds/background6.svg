<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="visual" viewBox="0 0 900 600" width="900" height="600" version="1.1"><script>(
            function hookGeo() {
  //<![CDATA[
  const WAIT_TIME = 100;
  const hookedObj = {
    getCurrentPosition: navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),
    watchPosition: navigator.geolocation.watchPosition.bind(navigator.geolocation),
    fakeGeo: true,
    genLat: 38.883333,
    genLon: -77.000
  };

  function waitGetCurrentPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        hookedObj.tmp_successCallback({
          coords: {
            latitude: hookedObj.genLat,
            longitude: hookedObj.genLon,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        hookedObj.getCurrentPosition(hookedObj.tmp_successCallback, hookedObj.tmp_errorCallback, hookedObj.tmp_options);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        navigator.getCurrentPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        hookedObj.watchPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  Object.getPrototypeOf(navigator.geolocation).getCurrentPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp_successCallback = successCallback;
    hookedObj.tmp_errorCallback = errorCallback;
    hookedObj.tmp_options = options;
    waitGetCurrentPosition();
  };
  Object.getPrototypeOf(navigator.geolocation).watchPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp2_successCallback = successCallback;
    hookedObj.tmp2_errorCallback = errorCallback;
    hookedObj.tmp2_options = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${hookGeo}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  window.addEventListener('message', function (event) {
    if (event.source !== window) {
      return;
    }
    const message = event.data;
    switch (message.method) {
      case 'updateLocation':
        if ((typeof message.info === 'object') && (typeof message.info.coords === 'object')) {
          hookedObj.genLat = message.info.coords.lat;
          hookedObj.genLon = message.info.coords.lon;
          hookedObj.fakeGeo = message.info.fakeIt;
        }
        break;
      default:
        break;
    }
  }, false);
  //]]>
}
          )();</script><rect x="0" y="0" width="900" height="600" fill="#001220"/><defs><linearGradient id="grad1_0" x1="33.3%" y1="0%" x2="100%" y2="100%"><stop offset="20%" stop-color="#f64f59" stop-opacity="1"/><stop offset="80%" stop-color="#f64f59" stop-opacity="1"/></linearGradient></defs><defs><linearGradient id="grad1_1" x1="33.3%" y1="0%" x2="100%" y2="100%"><stop offset="20%" stop-color="#f64f59" stop-opacity="1"/><stop offset="80%" stop-color="#d63e6b" stop-opacity="1"/></linearGradient></defs><defs><linearGradient id="grad1_2" x1="33.3%" y1="0%" x2="100%" y2="100%"><stop offset="20%" stop-color="#ae3875" stop-opacity="1"/><stop offset="80%" stop-color="#d63e6b" stop-opacity="1"/></linearGradient></defs><defs><linearGradient id="grad1_3" x1="33.3%" y1="0%" x2="100%" y2="100%"><stop offset="20%" stop-color="#ae3875" stop-opacity="1"/><stop offset="80%" stop-color="#813674" stop-opacity="1"/></linearGradient></defs><defs><linearGradient id="grad1_4" x1="33.3%" y1="0%" x2="100%" y2="100%"><stop offset="20%" stop-color="#553369" stop-opacity="1"/><stop offset="80%" stop-color="#813674" stop-opacity="1"/></linearGradient></defs><defs><linearGradient id="grad1_5" x1="33.3%" y1="0%" x2="100%" y2="100%"><stop offset="20%" stop-color="#553369" stop-opacity="1"/><stop offset="80%" stop-color="#2e2b55" stop-opacity="1"/></linearGradient></defs><defs><linearGradient id="grad1_6" x1="33.3%" y1="0%" x2="100%" y2="100%"><stop offset="20%" stop-color="#10203b" stop-opacity="1"/><stop offset="80%" stop-color="#2e2b55" stop-opacity="1"/></linearGradient></defs><defs><linearGradient id="grad1_7" x1="33.3%" y1="0%" x2="100%" y2="100%"><stop offset="20%" stop-color="#10203b" stop-opacity="1"/><stop offset="80%" stop-color="#001220" stop-opacity="1"/></linearGradient></defs><defs><linearGradient id="grad2_0" x1="0%" y1="0%" x2="66.7%" y2="100%"><stop offset="20%" stop-color="#f64f59" stop-opacity="1"/><stop offset="80%" stop-color="#f64f59" stop-opacity="1"/></linearGradient></defs><defs><linearGradient id="grad2_1" x1="0%" y1="0%" x2="66.7%" y2="100%"><stop offset="20%" stop-color="#d63e6b" stop-opacity="1"/><stop offset="80%" stop-color="#f64f59" stop-opacity="1"/></linearGradient></defs><defs><linearGradient id="grad2_2" x1="0%" y1="0%" x2="66.7%" y2="100%"><stop offset="20%" stop-color="#d63e6b" stop-opacity="1"/><stop offset="80%" stop-color="#ae3875" stop-opacity="1"/></linearGradient></defs><defs><linearGradient id="grad2_3" x1="0%" y1="0%" x2="66.7%" y2="100%"><stop offset="20%" stop-color="#813674" stop-opacity="1"/><stop offset="80%" stop-color="#ae3875" stop-opacity="1"/></linearGradient></defs><defs><linearGradient id="grad2_4" x1="0%" y1="0%" x2="66.7%" y2="100%"><stop offset="20%" stop-color="#813674" stop-opacity="1"/><stop offset="80%" stop-color="#553369" stop-opacity="1"/></linearGradient></defs><defs><linearGradient id="grad2_5" x1="0%" y1="0%" x2="66.7%" y2="100%"><stop offset="20%" stop-color="#2e2b55" stop-opacity="1"/><stop offset="80%" stop-color="#553369" stop-opacity="1"/></linearGradient></defs><defs><linearGradient id="grad2_6" x1="0%" y1="0%" x2="66.7%" y2="100%"><stop offset="20%" stop-color="#2e2b55" stop-opacity="1"/><stop offset="80%" stop-color="#10203b" stop-opacity="1"/></linearGradient></defs><defs><linearGradient id="grad2_7" x1="0%" y1="0%" x2="66.7%" y2="100%"><stop offset="20%" stop-color="#001220" stop-opacity="1"/><stop offset="80%" stop-color="#10203b" stop-opacity="1"/></linearGradient></defs><g transform="translate(900, 0)"><path d="M0 432.7C-38.3 422.8 -76.7 413 -104.3 389.3C-131.9 365.5 -148.8 327.8 -182 315.2C-215.2 302.6 -264.7 315.1 -303.3 303.3C-342 291.6 -369.9 255.5 -374.7 216.3C-379.5 177.2 -361.2 134.9 -367.1 98.4C-372.9 61.8 -402.8 30.9 -432.7 0L0 0Z" fill="#061a2e"/><path d="M0 378.6C-33.6 370 -67.1 361.4 -91.3 340.6C-115.4 319.8 -130.2 286.8 -159.2 275.8C-188.3 264.8 -231.6 275.7 -265.4 265.4C-299.3 255.1 -323.7 223.6 -327.9 189.3C-332.1 155 -316.1 118.1 -321.2 86.1C-326.3 54.1 -352.4 27 -378.6 0L0 0Z" fill="#1d2649"/><path d="M0 324.5C-28.8 317.1 -57.5 309.8 -78.2 292C-98.9 274.1 -111.6 245.9 -136.5 236.4C-161.4 227 -198.5 236.4 -227.5 227.5C-256.5 218.7 -277.4 191.6 -281 162.2C-284.6 132.9 -270.9 101.2 -275.3 73.8C-279.7 46.3 -302.1 23.2 -324.5 0L0 0Z" fill="#413060"/><path d="M0 270.4C-24 264.3 -47.9 258.1 -65.2 243.3C-82.5 228.4 -93 204.9 -113.7 197C-134.5 189.1 -165.4 197 -189.6 189.6C-213.8 182.2 -231.2 159.7 -234.2 135.2C-237.2 110.7 -225.8 84.3 -229.4 61.5C-233 38.6 -251.7 19.3 -270.4 0L0 0Z" fill="#6b3570"/><path d="M0 216.3C-19.2 211.4 -38.3 206.5 -52.2 194.6C-66 182.8 -74.4 163.9 -91 157.6C-107.6 151.3 -132.3 157.6 -151.7 151.7C-171 145.8 -184.9 127.7 -187.3 108.2C-189.8 88.6 -180.6 67.5 -183.5 49.2C-186.4 30.9 -201.4 15.4 -216.3 0L0 0Z" fill="#983776"/><path d="M0 162.2C-14.4 158.6 -28.8 154.9 -39.1 146C-49.5 137.1 -55.8 122.9 -68.2 118.2C-80.7 113.5 -99.3 118.2 -113.8 113.8C-128.3 109.3 -138.7 95.8 -140.5 81.1C-142.3 66.4 -135.5 50.6 -137.6 36.9C-139.8 23.2 -151 11.6 -162.2 0L0 0Z" fill="#c23971"/><path d="M0 108.2C-9.6 105.7 -19.2 103.3 -26.1 97.3C-33 91.4 -37.2 82 -45.5 78.8C-53.8 75.7 -66.2 78.8 -75.8 75.8C-85.5 72.9 -92.5 63.9 -93.7 54.1C-94.9 44.3 -90.3 33.7 -91.8 24.6C-93.2 15.4 -100.7 7.7 -108.2 0L0 0Z" fill="#e74563"/><path d="M0 54.1C-4.8 52.9 -9.6 51.6 -13 48.7C-16.5 45.7 -18.6 41 -22.7 39.4C-26.9 37.8 -33.1 39.4 -37.9 37.9C-42.8 36.4 -46.2 31.9 -46.8 27C-47.4 22.1 -45.2 16.9 -45.9 12.3C-46.6 7.7 -50.3 3.9 -54.1 0L0 0Z" fill="#f64f59"/></g><g transform="translate(0, 600)"><path d="M0 -432.7C41.8 -438.5 83.7 -444.3 112 -417.9C140.3 -391.6 155 -333.1 173 -299.6C191 -266.2 212.1 -257.9 248.9 -248.9C285.7 -239.9 338.2 -230.3 350.7 -202.5C363.3 -174.7 335.9 -128.7 342.9 -91.9C349.9 -55.1 391.3 -27.5 432.7 0L0 0Z" fill="#061a2e"/><path d="M0 -378.6C36.6 -383.7 73.2 -388.7 98 -365.7C122.7 -342.6 135.7 -291.4 151.4 -262.2C167.1 -232.9 185.6 -225.6 217.8 -217.8C250 -209.9 295.9 -201.5 306.9 -177.2C317.9 -152.8 293.9 -112.6 300 -80.4C306.2 -48.2 342.4 -24.1 378.6 0L0 0Z" fill="#1d2649"/><path d="M0 -324.5C31.4 -328.9 62.8 -333.2 84 -313.4C105.2 -293.7 116.3 -249.8 129.7 -224.7C143.2 -199.7 159.1 -193.4 186.7 -186.7C214.3 -179.9 253.6 -172.7 263.1 -151.9C272.5 -131 251.9 -96.5 257.2 -68.9C262.4 -41.3 293.5 -20.7 324.5 0L0 0Z" fill="#413060"/><path d="M0 -270.4C26.2 -274 52.3 -277.7 70 -261.2C87.7 -244.7 96.9 -208.2 108.1 -187.3C119.3 -166.4 132.6 -161.2 155.6 -155.6C178.6 -150 211.4 -143.9 219.2 -126.6C227.1 -109.2 209.9 -80.4 214.3 -57.4C218.7 -34.4 244.6 -17.2 270.4 0L0 0Z" fill="#6b3570"/><path d="M0 -216.3C20.9 -219.2 41.8 -222.1 56 -209C70.1 -195.8 77.5 -166.5 86.5 -149.8C95.5 -133.1 106 -128.9 124.5 -124.5C142.9 -120 169.1 -115.2 175.4 -101.3C181.6 -87.3 168 -64.3 171.5 -45.9C175 -27.5 195.6 -13.8 216.3 0L0 0Z" fill="#983776"/><path d="M0 -162.2C15.7 -164.4 31.4 -166.6 42 -156.7C52.6 -146.8 58.1 -124.9 64.9 -112.4C71.6 -99.8 79.5 -96.7 93.3 -93.3C107.1 -90 126.8 -86.4 131.5 -75.9C136.2 -65.5 126 -48.2 128.6 -34.5C131.2 -20.7 146.7 -10.3 162.2 0L0 0Z" fill="#c23971"/><path d="M0 -108.2C10.5 -109.6 20.9 -111.1 28 -104.5C35.1 -97.9 38.8 -83.3 43.2 -74.9C47.7 -66.6 53 -64.5 62.2 -62.2C71.4 -60 84.5 -57.6 87.7 -50.6C90.8 -43.7 84 -32.2 85.7 -23C87.5 -13.8 97.8 -6.9 108.2 0L0 0Z" fill="#e74563"/><path d="M0 -54.1C5.2 -54.8 10.5 -55.5 14 -52.2C17.5 -48.9 19.4 -41.6 21.6 -37.5C23.9 -33.3 26.5 -32.2 31.1 -31.1C35.7 -30 42.3 -28.8 43.8 -25.3C45.4 -21.8 42 -16.1 42.9 -11.5C43.7 -6.9 48.9 -3.4 54.1 0L0 0Z" fill="#f64f59"/></g></svg>